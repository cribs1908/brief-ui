{"version":3,"sources":["turbopack:///[project]/brief-ui/src/lib/env.ts"],"sourcesContent":["export function requireEnv(name: string): string {\n\tconst v = process.env[name];\n\tif (!v) throw new Error(`Missing env ${name}`);\n\treturn v;\n}\n\nexport const ENV = {\n\t// Supabase (invariato)\n\tsupabaseUrl: process.env.SUPABASE_URL,\n\tsupabaseAnon: process.env.SUPABASE_ANON_KEY,\n\tsupabaseService: process.env.SUPABASE_SERVICE_ROLE_KEY,\n\tbucket: process.env.SUPABASE_STORAGE_BUCKET || 'specsheets',\n\t\n\t// OpenAI (semplificato - solo mini model)\n\topenaiKey: process.env.OPENAI_API_KEY,\n\topenaiModel: process.env.OPENAI_MODEL || 'gpt-4o-mini',\n\t\n\t// Mistral AI OCR\n\tmistralApiKey: process.env.MISTRAL_API_KEY,\n\t\n\t// Worker esterno per processing\n\tworkerBaseUrl: process.env.WORKER_BASE_URL || 'http://localhost:3001',\n\t\n\t// Clerk (invariato)\n\tclerkPublishableKey: process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,\n\tclerkSecretKey: process.env.CLERK_SECRET_KEY,\n\t\n\t// Limiti configurabili\n\tmaxFilesPerRun: parseInt(process.env.MAX_FILES_PER_RUN || '4'),\n\tmaxPagesPerPdf: parseInt(process.env.MAX_PAGES_PER_PDF || '120'),\n\tmaxMbPerPdf: parseInt(process.env.MAX_MB_PER_PDF || '30'),\n};\n"],"names":[],"mappings":"y9CAMO,IAAM,EAAM,CAElB,YAAa,QAAQ,GAAG,CAAC,YAAY,CACrC,aAAc,QAAQ,GAAG,CAAC,iBAAiB,CAC3C,gBAAiB,QAAQ,GAAG,CAAC,yBAAyB,CACtD,OAAQ,QAAQ,GAAG,CAAC,uBAAuB,EAAI,aAG/C,UAAW,QAAQ,GAAG,CAAC,cAAc,CACrC,YAAa,QAAQ,GAAG,CAAC,YAAY,EAAI,cAGzC,cAAe,QAAQ,GAAG,CAAC,eAAe,CAG1C,cAAe,QAAQ,GAAG,CAAC,eAAe,EAAI,wBAG9C,mBAAmB,CAAA,uCACnB,eAAgB,QAAQ,GAAG,CAAC,gBAAgB,CAG5C,eAAgB,SAAS,QAAQ,GAAG,CAAC,iBAAiB,EAAI,KAC1D,eAAgB,SAAS,QAAQ,GAAG,CAAC,iBAAiB,EAAI,OAC1D,YAAa,SAAS,QAAQ,GAAG,CAAC,cAAc,EAAI,KACrD"}