{"version":3,"sources":["turbopack:///[project]/brief-ui/node_modules/@clerk/nextjs/dist/esm/app-router/client/keyless-cookie-sync.js/__nextjs-internal-proxy.mjs","turbopack:///[project]/brief-ui/node_modules/@clerk/nextjs/src/app-router/client/keyless-cookie-sync.tsx"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const KeylessCookieSync = registerClientReference(\n    function() { throw new Error(\"Attempted to call KeylessCookieSync() from the server but KeylessCookieSync is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/brief-ui/node_modules/@clerk/nextjs/dist/esm/app-router/client/keyless-cookie-sync.js\",\n    \"KeylessCookieSync\",\n);\n","'use client';\n\nimport type { AccountlessApplication } from '@clerk/backend';\nimport { useSelectedLayoutSegments } from 'next/navigation';\nimport type { PropsWithChildren } from 'react';\nimport { useEffect } from 'react';\n\nimport { canUseKeyless } from '../../utils/feature-flags';\n\nexport function KeylessCookieSync(props: PropsWithChildren<AccountlessApplication>) {\n  const segments = useSelectedLayoutSegments();\n  const isNotFoundRoute = segments[0]?.startsWith('/_not-found') || false;\n\n  useEffect(() => {\n    if (canUseKeyless && !isNotFoundRoute) {\n      void import('../keyless-actions.js').then(m =>\n        m.syncKeylessConfigAction({\n          ...props,\n          // Preserve the current url and return back, once keys are synced in the middleware\n          returnUrl: window.location.href,\n        }),\n      );\n    }\n  }, [isNotFoundRoute]);\n\n  return props.children;\n}\n"],"names":[],"mappings":"uEAEO,IAAM,EAAoB,CAAA,EAAA,AADjC,EAAA,CAAA,CAAA,MACiC,uBAAA,AAAuB,EACpD,WAAa,MAAM,AAAI,MAAM,gPAAkP,EAC/Q,sHACA,8EAHG,IAAM,EAAoB,CAAA,EADjC,AACiC,EADjC,CAAA,CAAA,MACiC,uBAAA,AAAuB,EACpD,WAAa,MAAM,AAAI,MAAM,gPAAkP,EAC/Q,kGACA","ignoreList":[0]}